<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Kwik</title><link>https://kwiksher.github.io/kwik5docs/</link><description>Recent content in Home on Kwik</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="https://kwiksher.github.io/kwik5docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Components</title><link>https://kwiksher.github.io/kwik5docs/bookstore/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/bookstore/components/</guid><description>Components bookstore consists of the following files and modules
Photoshop files library.psd dialog.psd table.psd Solar2D components model view controller Photoshop files library.psd dialog.psd table.psd Solar2D components App/bookTOC
├── App │ ├── bookFree │ ├── bookOne │ ├── bookTOC | ├── components | | ├── library | | ├── layers | | | ├── bg.lua | | | ├── bookFreeIcon.lua | | | ├── bookOneIcon.lua | | | ├── downloadBtn.lua | | | ├── purchaseBtn.</description></item><item><title>PUT</title><link>https://kwiksher.github.io/kwik5docs/implementation/rest_api/put/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/rest_api/put/</guid><description>PUT PUT create a new book create a new page create a new layer events copy page See server/test/book01/
create a new book PUT /newBook template is located in editor/template
destination for a new book is App/newBook
only the directories exclude pageX are copied for newBook
components/index.lua and pageX are generated when you specify a new page name to be added
local scenes = { {{#pages}} {{name}}, {{/pages}} } return scenes image/pageX</description></item><item><title>Step 1 - UXP</title><link>https://kwiksher.github.io/kwik5docs/get_started/step1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/step1/</guid><description>UXP/kwik-exporter Open Adobe UXP Developer Tool
Add Plugin to select develop/UXP/kwik-exporter/dist
TODO alpla release folder structure may be different to the current develop
Load it
Kwik Exporter Panel apppears
Photoshop Files &amp;gt; Open
you can select the following folder that comes with demo .psd files and kwikconfig.json. You may open a folder of yours which contains psd files.
sample-projects/SingleBook/book01
page1.psd page2.psd kwikconfig.json { &amp;#34;name&amp;#34;:&amp;#34;book one&amp;#34;, &amp;#34;output&amp;#34;:&amp;#34;../../Solar2D/src/App/book&amp;#34;, &amp;#34;pages&amp;#34;:[ {&amp;#34;psd&amp;#34;:&amp;#34;page01.psd&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;page one&amp;#34;}, {&amp;#34;psd&amp;#34;:&amp;#34;page02.</description></item><item><title>Step2 - Solar2D</title><link>https://kwiksher.github.io/kwik5docs/get_started/step2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/step2/</guid><description>Solar2D Simulator Open main.lua in Solar2D/src with Solar2D Simulator
TODO UXP::Publish to include swipe page or A/D keys for navigation ⭐️
kwiconfig.lua
debug = {enable = true, navigation= &amp;#34;swipe/keys&amp;#34;} Kwik Visual Code Editor</description></item><item><title>Kwik Editor Screen Orientation</title><link>https://kwiksher.github.io/kwik5docs/get_started/editor_screen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/editor_screen/</guid><description>build.setting with landscape build.setting with portrait The editable tables for spritesheet, and sync text&amp;amp;audio looks lik this</description></item><item><title>PSD Naming Rule</title><link>https://kwiksher.github.io/kwik5docs/get_started/naming_rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/naming_rule/</guid><description>Naming .psd file anad layers in documents Project and file names
Avoid long names for your projects and files and, DO NOT use characters like +-&amp;lt;&amp;gt;%,#;!.
Layer names
Before you start adding buttons and animations, follow the rules below. It is much easier to add interactivity with finalized names rather than to edit all of them afterward. Basic rules include:
Only user Western characters are allowed for layer names.
DO NOT use characters such as + - &amp;lt;&amp;gt; %,#;!</description></item><item><title>PSD Screen Size Orientation</title><link>https://kwiksher.github.io/kwik5docs/get_started/screen_size_orientation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/screen_size_orientation/</guid><description>config.lua width = 320, height = 480, scale = &amp;#34;letterBox&amp;#34; https://forums.solar2d.com/t/content-positioning/355677/11
https://forums.solar2d.com/t/image-scaling/150116/10?u=ymmtny
width 1080, height 1620
https://coronalabs.com/blog/2018/08/08/understanding-content-scaling-in-corona/
https://forums.solar2d.com/t/from-the-blog-understanding-content-scaling-in-corona/348296
config.lua is always written assuming a portrait orientation
https://forums.solar2d.com/t/image-scaling/150116/
The 1.5 is a subtile change, but but instead of waiting until you have a 2160 to use the 2x images, you use them starting at 1620px screens
https://github.com/SpyricGames/Solar2D-Plugins-Public
Screen
build.settings Default Landscape page4.psd iPad Air 1536 x 2048
=&amp;gt; landscape to portrait</description></item><item><title>Steps</title><link>https://kwiksher.github.io/kwik5docs/bookstore/steps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/bookstore/steps/</guid><description>Steps Project folders
Photsohop/bookShopX
bookTOC library.psd {{bookName}}Icon downloadBtn saveBtn savingTxt purchaseBtn restoreBtn infoTxt Buy Product Action dialog.psd {{bookName}}Icon downloadBtn saveBtn savingTxt purchaseBtn infoTxt hideOverlayBtn bookFree page1.psd page2.psd bookOne page1.psd page2.psd Solar2D
main.lua
require(&amp;#34;controller.index&amp;#34;).bootstrap({name=&amp;#34;book&amp;#34;, sceneIndex = 1}) -- scenes.index {&amp;#34;library&amp;#34;, &amp;#34;dialog&amp;#34;} components/bookstore/model.lua
Host URL of yours if you set up your own server.
local YourHost = &amp;#34;http://localhost:8080&amp;#34; M.URL = YourHost..&amp;#34;/bookshelf/&amp;#34; M.backgroundImg = &amp;#34;bg.png&amp;#34; books model
M.books = { bookFree = { name = &amp;#34;bookFree&amp;#34;, versions = {&amp;#34;en&amp;#34;, &amp;#34;jp&amp;#34;}, titles = {en=&amp;#34;bookOne&amp;#34;, jp=&amp;#34;&amp;#34;}, descriptions = {en=&amp;#34;desc&amp;#34;, jp =&amp;#34;&amp;#34;}, isFree = true, isOnlineImg = false, image = &amp;#34;App/bookFree/assets/images/title/bg.</description></item><item><title>Book Server</title><link>https://kwiksher.github.io/kwik5docs/bookstore/server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/bookstore/server/</guid><description>Book Server Preparation After published your Book&amp;rsquo;s projects, you can use compress_assets/main.lua
BookServer/compress_assets/main.lua
the script makes json and zip files
compress_assets/main.lua
local command = require(&amp;#34;compress_assets&amp;#34;) command.setServerFolder(&amp;#34;macos&amp;#34;, &amp;#34;bookstore&amp;#34;) --command.setServerFolder(&amp;#34;win32&amp;#34;, &amp;#34;bookstore&amp;#34;) -- the name of Kwik project and the name of In App Purchase product -- local books = { {project = &amp;#34;Book01&amp;#34;, serverFolder = &amp;#34;book01&amp;#34;}, {project = &amp;#34;Book02&amp;#34;, serverFolder = &amp;#34;book02&amp;#34;}, } -- Use Online Images needs an image file -- local onLineImages = { {project = &amp;#34;Book01&amp;#34;, serverFolder = &amp;#34;book01&amp;#34;, image = &amp;#34;assets/images/page1/bg@4x.</description></item><item><title>Solar2D Template</title><link>https://kwiksher.github.io/kwik5docs/get_started/solar2d_template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/solar2d_template/</guid><description>Project Template you can check out App/book folder from github instead of using Kwik UXP plugin to publish a book folder.
// TODO github url
The checked out book folder has page1 folder without any *.lua nor image files. If you want to rename the page name, just use Finder or File Explorerer, and change the table value in index.lua
assets/images/page1
commands/page1
components/page1
index.lua
local scenes = {&amp;#34;page1&amp;#34;} return scenes components/page1/index.</description></item><item><title>Components</title><link>https://kwiksher.github.io/kwik5docs/get_started/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/components/</guid><description>Components For instance components/pageX/page/swip.lua enables a page transition, and components/pageX/audios folder can have multiple audio lua files for instance short/audioOne.lua, long/audioTwo.lua. short audio file is loaded in to memory with audio.loadSound(), and long audio file is streaming with audio.loadStream().
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;pageX&amp;#34;, components = { layers = { { bg={} }, }, audios = { short = {&amp;#34;audioOne&amp;#34;}, long= {&amp;#34;audioTwo&amp;#34; }, groups = { }, timers = { }, variables = { }, page = { &amp;#34;controllers.</description></item><item><title>Photoshop File</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/photoshop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/photoshop/</guid><description>Photoshop File https://www.ios-resolution.com/
iPhone 13 Pro Max 1284x2778
iPad Pro 2048 x 2732
iPhone X 1125 x 2436
iPhone 11 Pro 1242 x 2688
https://forums.solar2d.com/t/iphone-11-pro-max-screen-shots-in-simulator/151266/11
Kwik4 Ulitimate Config
1280 x 1920
https://kwiksher.com/doc/getting_startted/guidelines/blend_mode/
https://kwiksher.com/doc/getting_startted/guidelines/screenshot/
background
1440 x 2280
iPhone X 1440 × 2772
https://forums.solar2d.com/t/how-to-define-application-working-area-on-the-screen/351066/11
https://forums.solar2d.com/t/safe-area-on-iphone-x-and-11-problem/353608
https://github.com/SpyricGames/Solar2D-Plugins-Public</description></item><item><title>Component &amp; Asset</title><link>https://kwiksher.github.io/kwik5docs/get_started/component_with_asset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/component_with_asset/</guid><description>Compoent with Asset audio App/book/assets/audios/long/GentleRain.mp3
App/book/components/page3/index.lua
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;page3&amp;#34;, components = { layers = { }, audios = { long = {&amp;#34;GentleRain&amp;#34;, &amp;#34;Tranquility&amp;#34; }, short ={} , }, groups = {}, timers = {}, variables = {}, page = { } }, commands = { &amp;#34;onComplete&amp;#34;, &amp;#34;play&amp;#34; }, onInit = function(scene) print(&amp;#34;onInit&amp;#34;) end }) -- return scene App/book/components/page3/audios/long/GentelRain.lua
local name = .</description></item><item><title>Custom Class</title><link>https://kwiksher.github.io/kwik5docs/get_started/custom_class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/custom_class/</guid><description>Custom class Put a lua file of your own class in commompinets/custom folder
Set your classname to a layer in App/bookX/pageX/index.lua
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;page1&amp;#34;, components = { layers = { { bg={ } }, { gotoBtn={ } }, { title={ class={&amp;#34;myClass&amp;#34;} } }, }, audios = {}, groups = {}, timers = {}, variables = {}, page = { } }, commands = { }, onInit = function(scene) print(&amp;#34;onInit&amp;#34;) end }) -- return scene myClass.</description></item><item><title>Icons Launch/Splash screens</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/icons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/icons/</guid><description>https://forums.solar2d.com/t/new-icon-size-for-ios/354492
114x114 iOS loads Apple’s launch images of LaunchScreen.storyboardc made by Xcode. You can create it with Xcode.
On Android:
Start App Show the default splash screen App&amp;rsquo;s first screen shows. On iOS:
Start App Show Apple&amp;rsquo;s launch images Show the default splash screen App&amp;rsquo;s first screen shows. Kwik4 https://kwiksher.com/doc/kwik_toolset/project_and_pages/project_properties/publish/
Copy these png files to ./build folders ?
iOS
https://docs.coronalabs.com/guide/distribution/buildSettings/index.html#custom-app-icons
├── Images.xcassets ├── AppIcon.appiconset │ ├── Contents.json │ ├── Icon-1024.png │ ├── Icon-120.</description></item><item><title>Simulator</title><link>https://kwiksher.github.io/kwik5docs/bookstore/simulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/bookstore/simulator/</guid><description>Simulator &amp;amp; Device Build Run with Simulator loading main.lua of BookShelfEmbedded with Corona Simulator, clicking purchase text will show up the IAP dialog Files &amp;gt; Show Project Sandbox, you find downloaded zip and bg.png. If you want to refresh the state beginning, delete the files from the Sandbox folders. TemporaryFiles must be cleared because the files from Internet are cached there. Build for device After everything all right with simulator, turn off debug mode IAP.</description></item><item><title>Commands &amp; Events</title><link>https://kwiksher.github.io/kwik5docs/get_started/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/events/</guid><description>Commands &amp;amp; Events For an event for a page in a book commands/myAction.lua are triggeded with a dispatchEvent fucntion
UI:dispatchEvent({ name = &amp;#34;myAction&amp;#34;, UI = UI }) this myAction is defined in commands table in components/pageX/index.lua
For a button, you see in components/pageX/index.lua, buttonOne layer has two events. they are tap and drag. These tap and drag events are handleld with commands/buttonOne/tap.lua and commands/buttonOne/drag.lua
commands are called as Action in Kwik.</description></item><item><title>Book Versions</title><link>https://kwiksher.github.io/kwik5docs/bookstore/versions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/bookstore/versions/</guid><description>Book Versions It is a feature to download a different language version of a book. A user pays for a book and choose to download a book with his/her language
Modified sample project is here.
book01en book01jp book02en book02jp bookTOC library.psd dialog.psd
BookSever BookSever/compress_assets/main.lua
command.setServerFolder(&amp;#34;macos&amp;#34;, &amp;#34;bookshelf&amp;#34;) --command.setServerFolder(&amp;#34;win32&amp;#34;, &amp;#34;bookshelf&amp;#34;) local books = { {project = &amp;#34;Book01en&amp;#34;, serverFolder = &amp;#34;book01en&amp;#34;}, {project = &amp;#34;Book01jp&amp;#34;, serverFolder = &amp;#34;book01jp&amp;#34;}, {project = &amp;#34;Book02en&amp;#34;, serverFolder = &amp;#34;book02en&amp;#34;}, {project = &amp;#34;Book02jp&amp;#34;, serverFolder = &amp;#34;book02jp&amp;#34;}, } local onLineImages = { {project = &amp;#34;Book01en&amp;#34;, serverFolder = &amp;#34;book01en&amp;#34;, image = &amp;#34;build4/assets/images/p1/bg@4x.</description></item><item><title>Import component Layer</title><link>https://kwiksher.github.io/kwik5docs/get_started/import_component/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/import_component/</guid><description>Import Layer Component Page1 Parts Instance Name index.lua
layers = { ... rectCopied = {class = {&amp;#34;imported&amp;#34;} ... } rectCopied_imported.lua
x, y color is (1, 1, 0) yellow local props={ path = &amp;#34;bookTest.components.parts.layers.buttonGroup.redRect&amp;#34;, name = &amp;#34;rectCopied&amp;#34;, class = {&amp;#34;button&amp;#34;, &amp;#34;linear&amp;#34;}, text = &amp;#34;hello importer class&amp;#34;, } local layerProps = { x = display.contentCenterX - 150, y = display.contentCenterY - 100, color = {1, 1, 0} } props.layerProps = layerProps props.classProps = { button = {}, linear = {} } return require(&amp;#34;components.</description></item><item><title>Architecure</title><link>https://kwiksher.github.io/kwik5docs/design/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/architecture/</guid><description>Architecure UXP panel
flowchart LR Designer((fas:fa-user Designer)) Developer((fas:fa-user Developer)) User((fas:fa-user User or AI)) subgraph Photoshop[Photoshop UXP] graphics(images/lua renderer&amp;lt;br&amp;gt;scaffolder) end subgraph Editor[Kwik Visual Editor] subgraph App assets[(assets/images&amp;lt;br&amp;gt;models/json)] lua[(Source .lua)] end tools(GUI tools&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;renderer&amp;lt;br&amp;gt;scaffolder) httpServer RestApi(RestApi&amp;lt;br&amp;gt;transform&amp;lt;br&amp;gt;animation) RestApi -.- tools end subgraph RestApi[REST API] form(Properties &amp;lt;br&amp;gt; CRUD) end subgraph VSCode httpYac(httpYac) coding end Photoshop -.img/json.-&amp;gt; assets RestApi &amp;lt;-.img/json.-&amp;gt; httpServer httpServer &amp;lt;-.-&amp;gt; assets httpServer -.- tools tools -.- App User -.- Browser Browser-.maybe in future.- RestApi httpYac -.</description></item><item><title>Asset Editor</title><link>https://kwiksher.github.io/kwik5docs/implementation/asset_editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/asset_editor/</guid><description>Asset Editor Asset Editor model Create user action Save model editor.model
assetTool = { name = &amp;#34;Assets&amp;#34;, id = &amp;#34;asset&amp;#34; } editor.parts.selectors
function M:create(UI) ... ... self.assetsSelector = selectorBase.new( UI, 56, -2, { {label = &amp;#34;Audio&amp;#34;, command = &amp;#34;selectAudioAsset&amp;#34;, store = &amp;#34;audios&amp;#34;, btree = &amp;#34;select asset&amp;#34;}, {label = &amp;#34;Particles&amp;#34;, command = &amp;#34;selectPaticlesAsset&amp;#34;, store = &amp;#34;paticles&amp;#34;, btree = &amp;#34;select asset&amp;#34;}, {label = &amp;#34;Spritesheet&amp;#34;, command = &amp;#34;selectSpriteAsset&amp;#34;, store = &amp;#34;sprites&amp;#34;, btree = &amp;#34;select asset&amp;#34;}, {label = &amp;#34;SyncText&amp;#34;, command = &amp;#34;selectSyncTextAsset&amp;#34;, store = &amp;#34;aduios.</description></item><item><title>Command line Build</title><link>https://kwiksher.github.io/kwik5docs/design/tools/builder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/tools/builder/</guid><description>Command line Build https://github.com/joehinkle11/Automated-Corona-Builder
Windows
https://forums.solar2d.com/t/command-line-build/347047/20
cd &amp;ldquo;%CORONA_PATH%&amp;rdquo; Native\Corona\win\bin\CoronaBuilder.exe build &amp;ndash;lua Z:\Projects\b2-win-html.lua
Mac
https://forums.solar2d.com/t/command-line-build-documentation-macos/348547/5
~/Library/Application\ Support/Corona/Native/Corona/mac/bin/CoronaBuilder.app/Contents/MacOS/CoronaBuilder build /path/to/params.lua
--Android: local params = { platform=&amp;#39;android&amp;#39;, appName=&amp;#39;appName&amp;#39;, appVersion=&amp;#39;1.1.2&amp;#39;, certificatePath = &amp;#39;path\_to\_keystore&amp;#39;, keystorePassword = &amp;#39;\*\*\*\*\*&amp;#39;, keystoreAlias = &amp;#39;alias&amp;#39;, keystoreAliasPassword = &amp;#39;\*\*\*\*\*\*&amp;#39;, androidVersionCode = &amp;#39;3&amp;#39;, dstPath=&amp;#39;/path/to/destination/folder&amp;#39;, projectPath=&amp;#39;/path/to/project/folder&amp;#39;, androidAppPackage=&amp;#39;com.example.myapp&amp;#39;, androidStore = &amp;#39;none&amp;#39; } return params --HTML: local params = { platform=&amp;#39;html5&amp;#39;, appName=&amp;#39;My app&amp;#39;, appVersion=&amp;#39;3.2.1&amp;#39;, dstPath=&amp;#39;/path/to/destination/folder&amp;#39;, projectPath=&amp;#39;/path/to/project/folder&amp;#39;, includeStandardResources = &amp;#39;true&amp;#39;, } return params --iOS: local params = { platform=&amp;#39;ios&amp;#39;, appName=&amp;#39;My App&amp;#39;, appVersion=&amp;#39;1.</description></item><item><title>Content X Structure</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/content/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/content/</guid><description>Content X Structure test/base-proj/Solar2D/editor.template
obsolete develop/UXP/kwik-exporter/plugin/kwik/base-proj/Solar2D/editor.template
. ├── assets │ ├── audios │ │ ├── long │ │ ├── short │ │ └── sync │ │ ├── en │ │ ├── jp │ ├── fonts │ ├── images │ │ └── pageX │ ├── model.json │ ├── particles │ ├── sprites │ ├── thumbnails │ ├── videos │ └── www ├── build.settings ├── commands │ └── pageX ├── components │ └── pageX │ ├── audios │ ├── layers │ │ ├── layer_image.</description></item><item><title>Layer</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/image/</guid><description>Layer page1
page4 for demonstrating layers and groups
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;page4&amp;#34;, components = { layers = { { bg={} }, { copyright={} }, { star={} }, { GroupA={ { Ellipse = {} }, { SubA = { { Triangle = {} }, } }, } }, { hello={} }, }, audios = {}, groups = {&amp;#34;SubA&amp;#34;, &amp;#34;GroupA&amp;#34;, &amp;#34;myGroup&amp;#34; }, timers = {}, variables = {}, page = {} }, commands = { -- &amp;#34;myAction&amp;#34;, &amp;#34;myEvents.</description></item><item><title>Lua Code</title><link>https://kwiksher.github.io/kwik5docs/design/workflow/lua/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/workflow/lua/</guid><description>Lua you don&amp;rsquo;t need to use kwik-generate-model nor kwik-editor to output lua files. You can skip making .json files of these tools, and you create a lua file manually into a folder, and append a name of additional file to scenes/pageX/index.lua
commands/pageX/**/*.lua components/pageX/**/*.lua At runtime, Kwik Code Framework reads scenes/pageX/index.lua to load each .lua files of pageX. The object names for commands, compnents, scenes are defined in the index.lua.
components/pageX/index.lua kwik-genereate-index is a tool to update the index.</description></item><item><title>REST API</title><link>https://kwiksher.github.io/kwik5docs/design/workflow/workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/workflow/workflow/</guid><description>REST API - YAML put images in App/demo/assets/page01
logo panel message button background shape1 shape2 Tool
Finder/File Expolorer Plugin for Photoshop or XD will export images Editor html post image form network display.loadRemoteImage
https://solar2d.com/images/logo.png
access images of XD shared view? or able to load them all?
network.download
Create layer structure
Editor lists the images Order Top/Bottom/Up/Down frontEnd uses Adobe React Spectrum (in future, support screen reader etc)
REST API to get the list of images and post the orderd list back</description></item><item><title>UXP Plugins</title><link>https://kwiksher.github.io/kwik5docs/design/tools/plugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/tools/plugins/</guid><description>UXP Plugins Kwik4 created a project folder where psd files are placed. Kwik5 you can creat a folder for your psd files on your own. When Kwik Exporter opens, it asks for the folder location.
Exporter plugins for PS, XD develop/UXP/kwik-exporter
the folder name/path is saved in a json
Photoshop Files
Open psd files from a folder
Drag &amp;amp; Drop to change the order of psd files
one psd file corresponds one scene in Solar2D code.</description></item><item><title>Asset and Component Releation</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/assets/diagram_relation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/assets/diagram_relation/</guid><description>Asset and Component Releation
graph RL subgraph editor tool[video replacement tool] tool -.- default([defautprops]) readAssetFunc[readAsset] end subgraph App.bookX subgraph assets short_ballsCollision.mp3 video.mp4 json[(assets.json for editor)] end subgraph components.pageX audio_short_ballsCollision.lua subgraph layers bg.lua imageOne.lua -.- layerProps([props table]) imageOne_video.lua -.- videoProps([props table]) end end end readAssetFunc -. 1. traverse with lfs .-&amp;gt; App.bookX readAssetFunc -. 2. generate .-&amp;gt; json YourInput -. 3.selecting layer&amp;lt;br&amp;gt;and video .-&amp;gt; tool tool -. 4-1.read/write .- json json -.</description></item><item><title>Audio</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/assets/audio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/assets/audio/</guid><description>Audio asset long short sync A wordTouch: clicking a word in a line, one mp3 for one word is played
file structure (physical)
TODO:rename sentenceDir to wordTouch?
── sync ├── alphabet │ ├── a.mp3 │ ├── b.mp3 │ └── c.mp3 ├── alphabet.mp3 ├── alphabet.txt lua table (logic)
audioProps = { language = nil, folder = nil, filename = &amp;#34;alphabet.mp3&amp;#34;, sentenceDir = &amp;#34;alphabet&amp;#34;, } textProps = { filename = &amp;#34;alphabet.txt&amp;#34;, } alphabet.</description></item><item><title>Particles</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/assets/particles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/assets/particles/</guid><description>Particles asset</description></item><item><title>Spritesheet</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/assets/spritesheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/assets/spritesheet/</guid><description>Spritsheet asset
TODO rename it as Imagesheet?
Sample slots.png
slots imagesheet is donwloaded from https://roaminggamer.github.io/RGDocs/pages/Plugins/texturepackerhelpers/ https://github.com/roaminggamer/RG_FreeStuff/raw/master/myPluginSamples/texturepackerhelpers/sample.zip
{ filename = &amp;#34;slots.png&amp;#34;, sheetInfo = &amp;#34;slots.lua&amp;#34;, } Sample butflysprite.png
Frame 188 x 188
Sheet Width 376 Height 188
{ filename = &amp;#34;butflysprite.png&amp;#34;, sheetInfo = { width = 188, height = 188, sheetWidth = 376, sheetHeight = 188, } } the above example has sheetInfo value but it could be empty for the first time when user just puts an imagesheet file in the assets folder.</description></item><item><title>Video</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/assets/video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/assets/video/</guid><description>Video asset
Local App/bookX/assets/video folder
── video ├── videoA.mp4 ├── animals ├─ cat.mp4 ├─ dog.mp4 lua table
{ isLocal = true, url = &amp;#34;videoA.mp4&amp;#34;, } { isLocal = true, url = &amp;#34;animals/dog.mp4&amp;#34;, } Remote https://kwiksher.com/tutorials/Video/kwikplant.mp4
{ isLocal = false, url = &amp;#34;https://kwiksher.com/tutorials/Video/kwikplant.mp4&amp;#34;, }</description></item><item><title>Web</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/assets/web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/assets/web/</guid><description>Web html asset
youtube sample
http://kwiksher.com/tutorials/Video/youtube.html
Vue sample?
strapi auth? api access?</description></item><item><title>action editor</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/commands/editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/commands/editor/</guid><description>Action editor model index.lua
. ├── actionCommand │ ├── cancel.lua │ ├── delete.lua │ └── save.lua ├── actionCommandButtons.lua ├── actionCommandPropsTable.lua ├── actionCommandTable.lua ├── actionTable.lua ├── buttons.lua ├── commandbox.lua ├── controller │ ├── cancel.lua │ ├── copy.lua │ ├── create.lua │ ├── delete.lua │ ├── index.lua │ ├── paste.lua │ ├── save.lua │ ├── selectAction.lua │ └── selectActionCommand.lua ├── index.lua ├── model.lua └── selector.lua local M = {name = name, views = { &amp;#34;index&amp;#34;, -- this creates actionIcon button &amp;#34;selector&amp;#34;, -- context:mapCommands &amp;#34;selectAction&amp;#34;, &amp;#34;selectActionCommand&amp;#34; &amp;#34;actionTable&amp;#34;, -- lists actions in a page &amp;#34;actionCommandTable&amp;#34;, &amp;#34;actionCommandPropsTable&amp;#34;, &amp;#34;commandbox&amp;#34;, -- animation.</description></item><item><title>UI</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/commands/ui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/commands/ui/</guid><description>UI UI action is selected one actionCommand is selected action is selected one actionCommand is selected</description></item><item><title>Animation</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/animation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/animation/</guid><description>Animation UI
index template
editor.template.componetns/pageX/index.lua template
editor.template.components.pageX.animations
layer_animation
module
components.kwik.layer_animation editor
components.editor.animation
tree .lua defaults
components.editor.animation.defaults</description></item><item><title>Animation Editor</title><link>https://kwiksher.github.io/kwik5docs/design/class/class_animation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/class/class_animation/</guid><description>classDiagram editorIndex editorIndex *-- menu : 1. User clicks Layer commands o-- selectBook commands o-- selectPage commands o-- selectLayer commands o-- selectTool class selectors{ - List: App, Book,Page - List: Layer, Audio, Group, Timer .. + projectPageSelector + componentSelector - componentHandler() } class selectorBase{ + selectorIcon + entries + onClick() } selectors &amp;lt;|..selectorBase: 1.1 onClick calls componentHandler menu *-- selectors selectors ..&amp;gt; store :1.2 commandHandler sets Layer entries class commands { + page + book + layer * class store.</description></item><item><title>Audio Editor</title><link>https://kwiksher.github.io/kwik5docs/implementation/audio_editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/audio_editor/</guid><description>Audio Editor Audio Editor Read Save Read editor.audio.audioTable receives the string array of audio files via nanostore
editor/parts/controller/selector/selectAudio receives the onClick event when user selects an audio entry in audioTable
local instance = require(&amp;#34;editor.audio.index&amp;#34;).controller:command() return instance the controller:command() from editor.controller.index decodes the json file of a selected audio and setValue to the UI table which has been initiated in editor.audio.index
conrolProps onCompletebox buttons are loaded in editor.audio.index and they are initiated with the controller</description></item><item><title>Editor</title><link>https://kwiksher.github.io/kwik5docs/design/tools/editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/tools/editor/</guid><description>Editor React Solar2D Kwik functions
Command
File
Project New Project Open Project Recent Page New Edit
Paste/Copy components Delete pages components Publish
Compress PNGs &amp;ndash; TBI notarized compress.app in Kwik Assemble PNGs A-Gif or A-PNG Publish Images One page or Selected pages Open Solar2D simulator options Enable child components &amp;ndash; TBI as layerSet as a group or independent option Debug show memory (trace/print control) Spritsheet @2x Importer for a Kwik3 project</description></item><item><title>Group Editor</title><link>https://kwiksher.github.io/kwik5docs/design/class/class_group/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/class/class_group/</guid><description>menu.controller.selector.selectGroup is linked to group.controller.selectGroup
local instance = require(&amp;#34;components.editor.group.controller.selectGroup&amp;#34;) classDiagram commands o-- selectLayer commands o-- selectGroup selectors ..&amp;gt; store selectGroup --&amp;gt; _selectGroup class _selectGroup{ &amp;lt;&amp;lt;Controller&amp;gt;&amp;gt; decodede = util.read layersbox store.set(decodede) layersTable store.set(decoded) return instance.new() } class add{ &amp;lt;&amp;lt;Controller&amp;gt;&amp;gt; layersbox:set(decodede) layersTable:set(decoded) } class remove{ &amp;lt;&amp;lt;Controller&amp;gt;&amp;gt; layersbox:set(decodede) layersTable:set(decoded) } class editorGroup { + groupTable as selectbox + controlbox + buttons + layersbox + groupTable } class groupTable { + groups oncllick() } class layersbox { + layers setValue() override } layersbox &amp;lt;|.</description></item><item><title>iOS</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/settings/ios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/settings/ios/</guid><description>iOS</description></item><item><title>REST Server</title><link>https://kwiksher.github.io/kwik5docs/design/tools/rest_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/tools/rest_server/</guid><description>Rest Server See get_started/custom_class as well
GET
returns .json of layer components(classes) or events/commands. It also returns default values of compoent properties
@host=http://localhost:9090 ### run pegasus server if not running, and return books GET /app ### GET /bookFree ### GET /bookFree/page1 ### selectLayer GET /bookFree/page1/title ### GET /bookFree/page1/title/linear POST
receives Props of layers and Commands and then renders .lua components/commands. It also stores the request params in .json
### modify layer props POST /bookFree/page1/title/?</description></item><item><title>Timer Editor</title><link>https://kwiksher.github.io/kwik5docs/design/class/class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/class/class/</guid><description>classDiagram editorIndex editorIndex *-- menu : 1. User clicks Timer commands o-- selectBook commands o-- selectPage commands o-- selectLayer commands o-- selectTimer class selectors{ - List: App, Book,Page - List: Layer, Audio, Group, Timer .. + projectPageSelector + componentSelector - componentHandler() } class selectorBase{ + selectorIcon + entries + onClick() } selectors &amp;lt;|..selectorBase: 1.1 onClick calls componentHandler menu *-- selectors selectors ..&amp;gt; store :1.2 commandHandler sets Timer entries class commands { + page + book + layer * class store.</description></item><item><title>Adding A Component</title><link>https://kwiksher.github.io/kwik5docs/implementation/adding_component/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/adding_component/</guid><description>how to add a component editor/index.lua and baseTable.lua handles user&amp;rsquo; selection from xxxTable commands/selectors/selectXXX.lua reads a json
selectors.lua handles to read values of UI.scene.model.components for xxxTable.
editor/models.lua
this defines layer related components. it does not include audio, group, timer, variables and action.
local models = { { name = &amp;#34;Animations&amp;#34;, icon = &amp;#34;toolAnim&amp;#34;, tools = { {name = &amp;#34;Linear&amp;#34;, icon = &amp;#34;animLinear&amp;#34;}, {name = &amp;#34;Blink&amp;#34;, icon = &amp;#34;animBlink&amp;#34;}, {name = &amp;#34;Bounce&amp;#34;, icon = &amp;#34;animBounce&amp;#34;}, {name = &amp;#34;Pulse&amp;#34;, icon = &amp;#34;animPulse&amp;#34;}, {name = &amp;#34;Rotation&amp;#34;, icon = &amp;#34;animRotation&amp;#34;}, {name = &amp;#34;Shake&amp;#34;, icon = &amp;#34;animShake&amp;#34;}, {name = &amp;#34;Switch&amp;#34;, icon = &amp;#34;animSwitch&amp;#34;}, {name = &amp;#34;Filter&amp;#34;, icon = &amp;#34;animFilter&amp;#34;}, {name = &amp;#34;Path&amp;#34;, icon = &amp;#34;animPath&amp;#34;}, }, id = &amp;#34;animation&amp;#34; }, .</description></item><item><title>android</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/settings/android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/settings/android/</guid><description>android</description></item><item><title>Audio</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/audio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/audio/</guid><description>Audio UI
index template
editor.template.componetns/pageX/index.lua
{ name = &amp;#34;pageX&amp;#34;, components = { layers = { {background={}}, }, audios = { long = {&amp;#34;streamOne&amp;#34;, &amp;#34;streamTwo&amp;#34;}, short = {&amp;#34;shortOne&amp;#34;, &amp;#34;shortTwo&amp;#34;} }, }, commands = {}, } template
editor.template.components.pageX.audios.aduio
local props = { autoPlay = {{autoPlay}}, channel = {{channel}}, delay = {{delay}}, filename = &amp;#34;{{filename}}&amp;#34;, folder = &amp;#34;{{folder}}&amp;#34;, loops = {{loops}}, -- 1 + 3 = 4 times name = &amp;#34;{{name}}&amp;#34;, type = &amp;#34;{{type}}&amp;#34;, } return require(&amp;#34;components.</description></item><item><title>Behavior Tree</title><link>https://kwiksher.github.io/kwik5docs/implementation/btree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/btree/</guid><description>Behavior Tree in Editor This is experimental. A Behavior tree implemetation enables a conditional call for an action node. If conditions are not satisfied for a button, the associated action to the button will not be executed when user clicks it
editor/controller/BTree/selectors.tree
BTree calls BThandler when actionNode is activated. The parameters are stored in backboard.
editor.index
M.commands = { {name=&amp;#34;selectApp&amp;#34;, btree=nil}, {name=&amp;#34;selectBook&amp;#34;, btree=&amp;#34;load book&amp;#34;}, {name=&amp;#34;selectPage&amp;#34;, btree=&amp;#34;load page&amp;#34;}, {name=&amp;#34;selectLayer&amp;#34;, btree=&amp;#34;load layer&amp;#34;}, {name=&amp;#34;selectPageProps&amp;#34;, btree=nil}, -- {name=&amp;#34;selectAction&amp;#34;, btree=&amp;#34;&amp;#34;}, {name=&amp;#34;selectTool&amp;#34;, btree=&amp;#34;editor component&amp;#34;}, -- {name=&amp;#34;selectActionCommand&amp;#34;, btree=&amp;#34;&amp;#34;} {name=&amp;#34;selectAudio&amp;#34;, btree=&amp;#34;load audio&amp;#34;}, {name=&amp;#34;selectGroup&amp;#34;, btree=&amp;#34;load group&amp;#34;}, {name=&amp;#34;selectTimer&amp;#34;, btree=&amp;#34;load timer&amp;#34;}, {name=&amp;#34;selectVariable&amp;#34;, btree=&amp;#34;load variable&amp;#34;}, -- {name=&amp;#34;selectVideo&amp;#34;, btree=&amp;#34;load video&amp;#34;}, } -- connects with BTree ---- local BTMap = {} for i=1, #M.</description></item><item><title>canvas</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/commands/canvas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/commands/canvas/</guid><description>Canvas Action Command action editor &amp;gt; Interactions &amp;gt; Canvas
//defined in editor.action.model.lua
M.commands{ ... canvas = { brush = { size = {size = 10, alpha = 1}, color = {0,0,0,1} }, erase = {}, undo = {}, redo = {} }, ... ```</description></item><item><title>macOS</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/settings/macos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/settings/macos/</guid><description>macOS Icon
assets/DeskTopIcon/Icon-osx.icns these .ico and .icns files are created with the following commands in Termnal app. Plese make icon_xx.png files and install image magic to Window PC
mac_icon.command rm -r icon.iconset cp -r desktop_icon-assets icon.iconset cd icon.iconset rm icon_48x48.png cp icon_32x32.png icon_16x16@2x.png mv icon_64x64.png icon_32x32@2x.png cp icon_256x256.png icon_128x128@2x.png cp icon_512x512.png icon_256x256@2x.png mv icon_1024x1024.png icon_512x512@2x.png cd .. iconutil --convert icns --output Icon-osx.icns icon.iconset</description></item><item><title>screenshot</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/commands/screenshot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/commands/screenshot/</guid><description>Screenshot Action Command action editor &amp;gt; Interactions &amp;gt; screenshot
//defined in editor.action.model.lua
M.commands{ ... screenshot = { take = { ptit = &amp;#34;&amp;#34;, message = &amp;#34;&amp;#34;, shutter = true, hideLayers = {} } }, ```</description></item><item><title>tvOS</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/settings/tvos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/settings/tvos/</guid><description>tvOS Icons
android(FireTV)
assets/tvAsset/Default-Landscape-assets/Default-Landscape.png assets/tvAsset/tvosLaunch-assets/Banner-xhdpi.png tvos(appleTV)
assets/tvAsset/tvosLaunch-assets/Icon-tvOS-Launch.png
assets/tvAsset/tvosLaunch-assets/Icon-tvOS-TopShelf.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Large-Background.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Large-LogoA.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Large-LogoB.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Large-LogoC.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Large-LogoD.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Small-Background.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Small-LogoA.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Small-LogoB.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Small-LogoC.png
assets/tvAsset/tvosPallax-assets/Icon-tvOS-Small-LogoD.png
Parallax Previewer App
https://developer.apple.com/library/tvos/documentation/General/Conceptual/AppleTV_PG/CreatingParallaxArtwork.html#//apple_ref/doc/uid/TP40015241-CH19-SW1 Solar2D does not need .lsr file to buld TVOS app. it needs those Logo.png
PSD files - Image assets from layers
https://helpx.adobe.com/photoshop/using/generate-assets-layers.html</description></item><item><title>Win32</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/settings/win32/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/settings/win32/</guid><description>Win32 Icon
assets/DeskTopIcon/Icon-win32.ico
win_icon.bat
set MYDIR=desktop_icon-assets set ICON_FILE=Icon-win32.ico magick ./%MYDIR%/icon_16x16.png ./%MYDIR%/icon_32x32.png ./%MYDIR%/icon_48x48.png %ICON_FILE% Image Magick http://www.imagemagick.org/</description></item><item><title>Button</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/button/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/button/</guid><description>Button</description></item><item><title>Canvas</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/canvas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/canvas/</guid><description>Canvas PSD
bookFree &amp;gt; canvas Unit Test
editor.test.suite_canvas Kwik4
components.kwik.layer_canvas.lua index
App/bookFree/canvas genereated from editor.template.componetns/pageX/index.lua
{ name = &amp;#34;pageX&amp;#34;, components = { layers = { { back={ } }, { painting={} }, { butBlue={ class={&amp;#34;button&amp;#34;}} }, { butWhite={class={&amp;#34;button&amp;#34;}} }, { butOrange={class={&amp;#34;button&amp;#34;}} }, { butCamera={class={&amp;#34;button&amp;#34;}} }, { butLarge={class={&amp;#34;button&amp;#34;}} }, { butMedium={class={&amp;#34;button&amp;#34;}} }, { bigCandice={class={&amp;#34;button&amp;#34;}} }, { Candice={class = {&amp;#34;canvas&amp;#34;}}, }, }, commands = {}, } editor/template/components/pageX/interaction/defaults/canvas.lua
// TODO add attributes
local M = { name = &amp;#34;canvas&amp;#34;, class=&amp;#34;canvas&amp;#34;, controls = { isActive = true } } return M template</description></item><item><title>Group</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/group/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/group/</guid><description>Group TODO page4&amp;rsquo;s groups = {&amp;ldquo;SubA&amp;rdquo;, &amp;ldquo;GroupA&amp;rdquo;, &amp;ldquo;myGroup&amp;rdquo; }</description></item><item><title>HTML5</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/settings/html5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/settings/html5/</guid><description>HTML5
Getting started with HTML5
https://docs.coronalabs.com/guide/html5/plugins/index.html
https://www.solar2dplayground.com/</description></item><item><title>Replacement Editor</title><link>https://kwiksher.github.io/kwik5docs/implementation/replacement_editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/replacement_editor/</guid><description>Replacement Editor Replacement Editor listbox and listButtons for syncText and Spreadsheet save listbox and listButtons for syncText and Spreadsheet User can create mutliple sprites as seqeunce data from a spresheet(imageSheet) , and for Sync Audio &amp;amp; Text, one line of text consists of words.
spitesheet model
sequenceData = { { name = &amp;#34;default&amp;#34;, count = 2, loopCount = 0, loopDirection = &amp;#34;forward&amp;#34;, -- reverse after last frame pause = false, start = 1, time = 1000, }, { name = &amp;#34;test&amp;#34;, frames = {1,2}, loopCount = 0, loopDirection = &amp;#34;forward&amp;#34;, -- reverse after last frame pause = false, time = 1000, } sync audio model for &amp;ldquo;A B C&amp;rdquo;</description></item><item><title>Selectors</title><link>https://kwiksher.github.io/kwik5docs/implementation/selectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/selectors/</guid><description>Selectors editor.parts.selectors
user selects one of entries of layers, audios, actions, groups, timers, variables
the tables of layers, audios, actions, groups, timers, variables are made with nanostore:set when user clicks one of the menu
componentHandler is attached to the onClick event of menu and then each XXXStore:listener creates each table
local function componentHandler(UI, storeTable) ... -- should we show the last secection? if storeTable == &amp;#34;layerTable&amp;#34; then UI.editor.layerStore:set(UI.scene.model.components.layers) elseif storeTable == &amp;#34;audioTable&amp;#34; then UI.</description></item><item><title>Template strurcture</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/template/</guid><description>template structure ├── App ├── contentX ├── assets │ ├── audios │ │ ├── short │ │ ├── long │ │ └── sync │ ├── images │ └── model.json ├── commands │ └── pageX ├── components │ ├── pageX │ │ ├── audios │ │── layers │ │ ├── animations │ │ ├── images │ │ ├── interactions │ │ ├── physics │ │ └── replacements │ ├── groups │ ├── page │ ├── timers │ ├── variables │ └── index.</description></item><item><title>Linux</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/settings/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/settings/linux/</guid><description>Linux
https://forums.solar2d.com/c/beta-testing/linux/118
https://snapcraft.io/solar2d
https://forums.solar2d.com/t/how-to-build-solar2d-on-linux/354787/3
audio.loadSound() won&amp;rsquo;t work https://forums.solar2d.com/t/audio-loadsound-wont-work/355589
Linux and Zerobrane Setup https://forums.solar2d.com/t/linux-and-zerobrane-setup/354500</description></item><item><title>Particles</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/particles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/particles/</guid><description>Particles create main.lua file
display.setStatusBar( display.HiddenStatusBar ) local particleDesigner = require( &amp;#34;particleDesigner&amp;#34; ) local kaboom = particleDesigner.newEmitter( &amp;#34;&amp;#39;+jname+&amp;#39;_temp.json&amp;#34; ) kaboom.x = display.contentWidth / 2 kaboom.y = display.contentHeight / 2 Model
{ configName = &amp;#39;&amp;#39;, textureFileName = &amp;#39;&amp;#39;, common = { duration = 0, sourcePositionVariancex = 0, sourcePositionVariancey = 0, maxParticles = 0, }, emitter = { emittyerType = 0, -- 0=grevity, 1=radial angle = 0, angleVariance = 0, gravity = { speed = 0, speedVariance = 0, gravityx = 0, gravityy = 0, radialAcceleration = 0, radialAccelVariance = 0, tangentialAcceleration = 0, tangentialAccelVariance = 0, }, radial = { maxRadius = 0, maxRadiusVariance = 0, minRadius = 0, minRadiusVariance = 0, rotatePerSecond = 0, rotatePerSecondVariance = 0, } }, particles = { particleLifespan = 0, particleLifespanVariance = 0, startParticleSize = 0, startParticleSizeVariance = 0, finishParticleSize = 0, finishParticleSizeVariance = 0, rotationStart = 0, rotationStartVariance = 0, rotationEnd = 0, rotationEndVariance = 0, }, colors = { startColorAlpha = 0, startColorRed = 0, startColorGreen = 0, startColorBlue = 0, startColorVarianceRed = 0, startColorVarianceGreen = 0, startColorVarianceBlue = 0, startColorVarianceAlpha = 0, finishColorAlpha = 0, finishColorRed = 0, finishColorGreen = 0, finishColorBlue = 0, blendFuncSource = 0, finishColorVarianceRed = 0, finishColorVarianceGreen = 0, finishColorVarianceBlue = 0, finishColorVarianceAlpha = 0, blendFuncDestination = 0, }, } var st = String(myParticles.</description></item><item><title>REST Server</title><link>https://kwiksher.github.io/kwik5docs/implementation/rest_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/rest_server/</guid><description>Rest Server editor.pegasus
pegasus is a open-souce lua http-server
httpYac in vscode to send a REST request to editor.pegasus
selectPage.http
this calls these commnands in editor
selectApp selectBook selectPage ref edtior.tests
pegasus harness receives the request in REST format (json)
dispatch events to commands
selectXXX reads App/bookX/pageX/index.lua or models/pageX/.json files, and the data are stored in nanstores for components such bookStore, pageStore, layerStore, audioStore
Response of http Rest in pegasus are retreived by nanostores:get(xxxStore)</description></item><item><title>Spritesheet</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/spritesheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/spritesheet/</guid><description>Spritesheet TODO
actionName with sprite event phase like began, ended, bounce, loop, next file selector for sheetInfo and filename? UI
index template
editor.template.componetns/pageX/index.lua template
editor.template.components.pageX.replacement
layer_spritesheet
module
components.kwik.layer_spritesheet editor
components.editor.replacement
. ├── controller │ ├── add.lua │ ├── cancel.lua │ ├── delete.lua │ ├── index.lua │ ├── save.lua │ └── select.lua ├── index.lua ├── listButtons.lua ├── listPropsTable.lua ├── listbox.lua ├── model.lua ├── onCompletebox.lua ├── particles │ └── controller └── videobox.lua defaults</description></item><item><title>Template Model</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/template_model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/template_model/</guid><description>Code Template Model assets/model/schema
embedded in codes &amp;ndash; TBI to be extracted
external codes - export it to .lua or can be imported directly physics path read2me - timecodes spritesheet info TODO:add ext codes
extCodes libs p1 user_codes.lua ext_001.lua ext_002.lua commands/ button_name_001.lua action_name_001.lua user_codes.lua p2/ =&amp;gt; build4/
```lua function ActionCommand:new() local command = {} -- function command:execute(params) local UI = params.UI local sceneGroup = UI.scene.view local layer = UI.layer local phase = params.</description></item><item><title>Utilities</title><link>https://kwiksher.github.io/kwik5docs/design/tools/utilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/tools/utilities/</guid><description>Utilities /develop/Solar2D/tools/yaml2lua
there is a vscode extention to convert yaml to json , json to yaml etc
- name: Loading01 from: from to: x: 100 y: 100 alpha: 1 duration: 2000 xScale: 1.5 yScale: 1.5 rotation: 0 controls: restart: false easing: Linear reverse: false delay: 1000 loop: 1 angle: 45 xSwipe: 0 ySwipe: 0 referncePoint: Center breadcrumbs: dispose: true shape: &amp;#34;&amp;#34; color: - 1 - 0 - 1 interval: 300 time: 2000 width: 30 height: 30 lua</description></item><item><title>httpYac REST API</title><link>https://kwiksher.github.io/kwik5docs/get_started/tools/httpyac/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/tools/httpyac/</guid><description>httpYac Restful API Representational State Transfer (REST) model for a programming framework
server/tests
bookTest01_editor.http
@host=http://localhost:9090 ### run pegasus server if not running, and return books GET /app ### GET /bookTest01 ### GET /bookTest01/page1 ### selectLayer GET /bookTest01/page1/imageOne ### GET /bookTest01/page1/imageOne/?class=linear ### modify layer props POST /bookTest01/page1/imageOne/ Content-Type: application/yaml { alpha=0.5 } ### save layer props with the current value PUT /bookTest01/page1/imageOne/ Content-Type: application/yaml PUT you can create a lua file and index.</description></item><item><title>Sync Audio&amp;Text</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/sync_audio_text/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/sync_audio_text/</guid><description>Sync Audio &amp;amp; Text A: alphabet B: i am cat C: my name is kwik D: my father is nice TODO
the latest model defaults.sync has audioProps and textProps but UI does not have them yet
update page3/layers
alphabet_sync.lua, iamacat_sync.lua mynameiskwik_sync.lua props.text &amp;ndash;&amp;gt; props.line
props.languge &amp;ndash;&amp;gt; props.line.en, props.line.jp and textProps.language = {&amp;ldquo;en&amp;rdquo;, &amp;ldquo;jp&amp;rdquo;}
UI
default
local M = { name = &amp;#34;alphabet&amp;#34;, class = &amp;#34;sync&amp;#34;, controls = { autoPlay = true, delay = nil, fadeDuration = 1000, speakerIcon = true, wordTouch = true, }, audioProps = { filename = &amp;#34;alphabet.</description></item><item><title>Timer</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/timer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/timer/</guid><description>Timer UI
template
editor.template.components.pageX.timers.timer
local props = { actionName = &amp;#34;{{actionName}}&amp;#34;, delay = {{delay}}, iterations = {{iterations}}, name = &amp;#34;{{name}}&amp;#34;, } return require(&amp;#34;components.kwik.page_timer&amp;#34;).new(props) module
components.kwik.page_timer
local M = {} ... ... function M:didShow(UI) self.timerObj = timer.performWithDelay( self.delay, function() if self.actionName then UI.scene:dispatchEvent({name = self.actionName }) end end, self.iterations) end -- components.editor.timer timer ├── buttons.lua ├── controller │ ├── cancel.lua │ └── save.lua ├── defaults │ └── timer.lua ├── index.lua └── timerTable.</description></item><item><title>Unit Test</title><link>https://kwiksher.github.io/kwik5docs/get_started/tools/unittest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/tools/unittest/</guid><description>Unit Test Examples cmponents/editor/tests/suite_controller.lua cmponents/editor/tests/suite_selector.lua components/editor/index.lua
local unitTestOn = true components/editor/tests/index.lua
require &amp;#34;extlib.lunatest&amp;#34; local M = { run = function (props) print(&amp;#34;============ lunatest =============&amp;#34;) lunatest.suite(&amp;#34;components.editor.tests.suite_controller&amp;#34;) lunatest.suite(&amp;#34;components.editor.tests.suite_selector&amp;#34;, props) lunatest.run() print(&amp;#34;============ end =============&amp;#34;) end } return M Examples cmponents/editor/tests/suite_controller.lua it tests editor/controller/index.lua
controller:render(book, page, layer, tool, class, props)
controller:save(book, page, layer,tool, nil, props ) assert_string(dst, &amp;ldquo;fail&amp;rdquo;)
&amp;hellip;
module(..., package.seeall) function suite_setup() controller = require &amp;#34;components.editor.controller.index&amp;#34; files = {} updatedScene = nil end function setup() book = &amp;#34;bookFree&amp;#34; page = &amp;#34;page1&amp;#34; tool = &amp;#34;interaction&amp;#34; layer = &amp;#34;butWhite&amp;#34; -- Update scenes.</description></item><item><title>Video</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/video/</guid><description>Video UI
(TBI) click the field name &amp;lsquo;url&amp;rsquo; in the prop&amp;rsquo;s table to open asset table
template
editor.template.components.pageX.videos.video
local props = { actionName = &amp;#34;{{actionName}}&amp;#34;, delay = {{delay}}, iterations = {{iterations}}, name = &amp;#34;{{name}}&amp;#34;, } return require(&amp;#34;components.kwik.layer_video&amp;#34;).new(props) Video Replacement allows you to configure a video that will appear in replacement of an image layer. For example, you can draw a blank rectangle image in photoshop, and then you publish images to Solar2D project.</description></item><item><title>Visual Studio Code</title><link>https://kwiksher.github.io/kwik5docs/get_started/tools/vscode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/tools/vscode/</guid><description>VS Code the following extensions helps your coding with Solar2D simulator.
Solar2D Autocomplete Solar2d Companion for Visual Studio Code Local Lua Debugger Run Terminal Command Local Lua Debugger For debugging with Local Lua Deubgger, launch.json should be placed in your workspace folder. For instance,
Assuming Kwik projects are located in ~/Kwik folder and this is your workplace folder of Visual Studio Code. launch.json will be created under .vscode/ folder
~/Kwik/.vscode/launch.json</description></item><item><title>Audacity</title><link>https://kwiksher.github.io/kwik5docs/get_started/tools/audacity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/tools/audacity/</guid><description>https://manual.audacityteam.org/man/label_tracks.html</description></item><item><title>New Features</title><link>https://kwiksher.github.io/kwik5docs/design/new_features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/new_features/</guid><description>New Features Solar2D API to be included
Audio
seek rewind cross fade function Social
twitter facebook instagram transition.*
chaining them mesh
2.5D — Perspective and Depth
game controllers
Solar2D video texture
https://github.com/ANSH3LL/plugin_movie Tiled
https://forums.solar2d.com/t/smooth-scrolling-of-top-down-tiled-map/150199/2
&amp;ldquo;cull based on a 3x3 area of sub-screens centered around player. &amp;quot;
https://gamedev.stackexchange.com/questions/83253/is-there-any-way-to-load-pieces-of-a-tile-map-as-and-when-needed-and-not-the-en
https://www.dynetisgames.com/2018/02/24/manage-big-maps-phaser-3/
A tool to split an existing Tiled tilemap into chunks How to reason about chunks based on their ID’s and the world dimensions How to load and destroy them on the fly using Phaser 3 Texture atlas function in kwik?</description></item><item><title/><link>https://kwiksher.github.io/kwik5docs/introduction/sponsor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/introduction/sponsor/</guid><description>OLD $5 a month 0 sponsors Get a Sponsor badge on your profile. Let&amp;rsquo;s start a project with Kwik
$10 a month 0 sponsors Support Kwik development, documentation and bug fixing
$25 a month 0 sponsors Access to new features before in advance of their becoming open source.
$50 a month 0 sponsors Pesonal support. About 3-4 hours in a week
$75 a month 0 sponsors Previous two tiers combined. Let&amp;rsquo;s discuss about new featuers of Kwik.</description></item></channel></rss>