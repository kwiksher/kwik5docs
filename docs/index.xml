<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Kwik</title><link>/</link><description>Recent content in Home on Kwik</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Content X Structure</title><link>/design/project_model/content/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/project_model/content/</guid><description>Content X Structure sandbox/Ps/react-uxp-styles/Project/Solar2D/src/App/contentX
(TODO clean the tree structure below)
. ├── assets │ ├── audios │ │ ├── sounds │ │ │ └── ballsCollide.mp3 │ │ ├── streams │ │ │ ├── Gentle-Rain.mp3 │ │ │ └── Tranquility.mp3 │ │ └── sync │ │ ├── en │ │ │ ├── cat.mp3 │ │ │ ├── kwik.mp3 │ │ │ └── narration.mp3 │ │ ├── jp │ │ │ ├── cat.</description></item><item><title>Naming Rule</title><link>/get_started/naming_rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/get_started/naming_rule/</guid><description>Naming .psd file anad layers in documents Project and file names
Avoid long names for your projects and files and, DO NOT use characters like +-&amp;lt;&amp;gt;%,#;!.
Layer names
Before you start adding buttons and animations, follow the rules below. It is much easier to add interactivity with finalized names rather than to edit all of them afterward. Basic rules include:
Only user Western characters are allowed for layer names.</description></item><item><title>Components</title><link>/get_started/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/get_started/components/</guid><description>Components For instance others/page/swip.lua enables a page transition, and audios can have multiple audio objects.
TODO should be page={swipe = {}, keyboard={}
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;kwik4_1280x1920&amp;#34;, layers = { { bg={ } }, }, components = { audios = { audioOne = {}, audioTwo = {} }, groups = { }, timers = { }, variables = { }, others = { &amp;#34;page.</description></item><item><title>Events &amp; Commands</title><link>/get_started/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/get_started/events/</guid><description>Events &amp;amp; Commands For an event for a page in a book there are two types
layer events general events For example in scenes/pageX/index.lua, buttonOne layer has two events, tap and drag, and for general events (kwik calls it Action) are defined as &amp;ldquo;myAction&amp;rdquo;, &amp;ldquo;myEvents.testHandler&amp;rdquo;
{ name = &amp;#34;kwik4_1280x1920&amp;#34;, layers = { { bg={} }, { buttonOne={ events = {tap, drag}} }, }, components = { audios = { }, groups = { }, timers = { }, variables = { }, others = { } }, events = { &amp;#34;myAction&amp;#34;, &amp;#34;myEvents.</description></item><item><title>Architecure</title><link>/design/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/architecture/</guid><description>Architecure html panel
browser uxp panel webview flowchart LR Designer((fas:fa-user Designer)) Developer((fas:fa-user Developer)) subgraph Photoshop graphics UXP end subgraph Editor[Editor] subgraph App assets[(assets/images&amp;lt;br&amp;gt;models/json)] lua[(Source .lua)] end tools(renderer&amp;lt;br&amp;gt;scafolder) httpServer GUI(GUI&amp;lt;br&amp;gt;transform&amp;lt;br&amp;gt;animation) GUI -.- tools end subgraph htmlPanel[REST API] form(Properties &amp;lt;br&amp;gt; CRUD) end subgraph VSCode httpYac(httpYac) end Photoshop -.img/json.-&amp;gt; assets htmlPanel &amp;lt;-.img/json.-&amp;gt; httpServer httpServer &amp;lt;-.-&amp;gt; assets httpServer -.- tools tools -.- App Browser-.- htmlPanel httpYac -.- htmlPanel VSCode -.- lua GUI -.</description></item><item><title>Audio</title><link>/design/project_model/components/audio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/project_model/components/audio/</guid><description>Audio components/pageX/audios
sounds/soundOne.lua streams/songOne.lua local Props = { name = &amp;#34;soundOne&amp;#34;, type = &amp;#34;sound&amp;#34;, autoPlay = true, channel = 2 } return Props scenes/pageX/index.lua
{ name = &amp;quot;pageX&amp;quot;, layers = { {background={}}, }, components = { {audios = { {name=&amp;quot;soundOne&amp;quot;, type=&amp;quot;sound&amp;quot;}, {name=&amp;quot;songOne&amp;quot;, type=&amp;quot;stream&amp;quot;} }}, {others = { {nanostores={}} }} }, events = {}, }</description></item><item><title>Image</title><link>/design/project_model/components/image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/project_model/components/image/</guid><description>Image scenes/pageX/background.lua
local _K = require &amp;#34;Application&amp;#34; local _M = require(&amp;#34;components.kwik.layer_image&amp;#34;).new() _M.weight = 1 local Props = { blendMode = &amp;#34;normal&amp;#34;, height = 520, width = 1000, kind = pixel, name = &amp;#34;bg&amp;#34;, x = 1000 -1000/2, y = 520/2, alpha = 100/100, } -- _M.imageWidth = Props.width/4 _M.imageHeight = Props.height/4 _M.mX, _M.mY = _K.ultimatePosition(Props.x, Props.y, &amp;#34;&amp;#34;) _M.randXStart = _K.ultimatePosition() _M.randXEnd = _K.ultimatePosition() _M.dummy, _M.randYStart = _K.ultimatePosition(0, ) _M.</description></item><item><title>Lua Code</title><link>/design/workflow/lua/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/workflow/lua/</guid><description>Lua you don&amp;rsquo;t need to use kwik-generate-model nor kwik-editor to output lua files. You can skip making .json files of these tools, and you create a lua file manually into a folder, and append a name of additional file to scenes/pageX/index.lua
commands/pageX/**/*.lua components/pageX/**/*.lua scenes/pageX/**/*.lua At runtime, Kwik Code Framework reads scenes/pageX/index.lua to load each .lua files of pageX. The object names for commands, compnents, scenes are defined in the index.</description></item><item><title>REST API</title><link>/design/workflow/workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/workflow/workflow/</guid><description>REST API - YAML put images in App/demo/assets/page01
logo panel message button background shape1 shape2 Tool
Finder/File Expolorer Plugin for Photoshop or XD will export images Editor html post image form network display.loadRemoteImage
https://solar2d.com/images/logo.png
access images of XD shared view? or able to load them all?
network.download
Create layer structure</description></item><item><title>UXP Plugins</title><link>/design/tools/plugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/tools/plugins/</guid><description>UXP Plugins Kwik4 created a project folder where psd files are placed. Kwik5 you can creat a folder for your psd files on your own. When Kwik Exporter opens, it asks for the folder location.
Exporter plugins for PS, XD develop/UXP/kwik-exporter
New
Open psd files from a folder (TODO)
the folder name/path is saved in a json
Publish selected psd files (TODO)</description></item><item><title>Editor</title><link>/design/tools/editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/tools/editor/</guid><description>Editor React Solar2D Kwik functions
Command
File
Project New Project Open Project Recent Page New Edit
Paste/Copy components Delete pages components Publish
Compress PNGs &amp;ndash; TBI notarized compress.app in Kwik Assemble PNGs A-Gif or A-PNG Publish Images One page or Selected pages Open Solar2D simulator options Enable child components &amp;ndash; TBI as layerSet as a group or independent option Debug show memory (trace/print control) Spritsheet @2x Importer for a Kwik3 project</description></item><item><title>REST Server</title><link>/design/tools/webapp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/tools/webapp/</guid><description>Rest Server Get
returns .json of layer components(classes) or events/commands. It also returns default values of compoent properties
POST
receives Props of layers and Commands and then renders .lua components/commands. It also stores the request params in .json
/develop/Solar2D/tools/pegasus-harness /develop/Solar2D/tools/pegasus-launcher</description></item><item><title>Template strurcture</title><link>/design/project_model/template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/project_model/template/</guid><description>template structure ├── App ├── contentX ├── assets │ ├── audios │ │ ├── sounds │ │ ├── streams │ │ └── sync │ ├── images │ └── model.json ├── commands │ └── pageX ├── components │ ├── pageX │ │ ├── audios │ │ ├── groups │ │ ├── interactions │ │ │ └── page │ │ ├── others │ │ ├── timers │ │ └── variables │ └── store?</description></item><item><title>Photoshop File</title><link>/design/project_model/photoshop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/project_model/photoshop/</guid><description>Photoshop File https://www.ios-resolution.com/
iPhone 13 Pro Max 1284x2778
iPad Pro 2048 x 2732
iPhone X 1125 x 2436
iPhone 11 Pro 1242 x 2688
https://forums.solar2d.com/t/iphone-11-pro-max-screen-shots-in-simulator/151266/11
Kwik4 Ulitimate Config
1280 x 1920
https://kwiksher.com/doc/getting_startted/guidelines/blend_mode/
https://kwiksher.com/doc/getting_startted/guidelines/screenshot/
background
1440 x 2280
iPhone X 1440 × 2772
https://forums.solar2d.com/t/how-to-define-application-working-area-on-the-screen/351066/11
https://forums.solar2d.com/t/safe-area-on-iphone-x-and-11-problem/353608
https://github.com/SpyricGames/Solar2D-Plugins-Public</description></item><item><title>Template Model</title><link>/design/project_model/template_model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/project_model/template_model/</guid><description>Code Template Model assets/model/schema
embedded in codes &amp;ndash; TBI to be extracted
external codes - export it to .lua or can be imported directly physics path read2me - timecodes spritesheet info TODO:add ext codes
extCodes libs p1 user_codes.lua ext_001.lua ext_002.lua commands/ button_name_001.lua action_name_001.lua user_codes.lua p2/ =&amp;gt; build4/
```lua function ActionCommand:new() local command = {} -- function command:execute(params) local UI = params.UI local sceneGroup = UI.scene.view local layer = UI.</description></item><item><title>Utilities</title><link>/design/tools/utilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/tools/utilities/</guid><description>Utilities /develop/Solar2D/tools/generate_scene_index (TODO update ⭐️)
generating scene/pageX/index.lua
index.lua is created by iterating files from
App/conentX/scene/pageX App/contentX/components/pageX App/conentX/commands/pageX scafolding (optional)
it outputs .lua files to components and commands folder by reading scene/pageX/index.lua</description></item><item><title>Icons</title><link>/design/project_model/icons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/project_model/icons/</guid><description>https://forums.solar2d.com/t/new-icon-size-for-ios/354492
114x114</description></item><item><title>New Features</title><link>/design/new_features/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/design/new_features/</guid><description>New Features Solar2D API to be included
Audio
seek rewind cross fade function Social
twitter facebook instagram transition.*
chaining them mesh
2.5D — Perspective and Depth
game controllers
Solar2D video texture
https://github.com/ANSH3LL/plugin_movie Tiled
https://forums.solar2d.com/t/smooth-scrolling-of-top-down-tiled-map/150199/2
&amp;ldquo;cull based on a 3x3 area of sub-screens centered around player. &amp;quot;</description></item></channel></rss>