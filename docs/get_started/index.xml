<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Get Started on Kwik</title><link>https://kwiksher.github.io/kwik5docs/get_started/</link><description>Recent content in Get Started on Kwik</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="https://kwiksher.github.io/kwik5docs/get_started/index.xml" rel="self" type="application/rss+xml"/><item><title>Step 1 - UXP</title><link>https://kwiksher.github.io/kwik5docs/get_started/step1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/step1/</guid><description>UXP/kwik-exporter Open Adobe UXP Developer Tool
Add Plugin to select develop/UXP/kwik-exporter/dist
TODO alpla release folder structure may be different to the current develop
Load it
Kwik Exporter Panel apppears
Photoshop Files &amp;gt; Open
you can select the following folder that comes with demo .psd files and kwikconfig.json. You may open a folder of yours which contains psd files.
sample-projects/SingleBook/book01
page1.psd page2.psd kwikconfig.json { &amp;#34;name&amp;#34;:&amp;#34;book one&amp;#34;, &amp;#34;output&amp;#34;:&amp;#34;../../Solar2D/src/App/book&amp;#34;, &amp;#34;pages&amp;#34;:[ {&amp;#34;psd&amp;#34;:&amp;#34;page01.psd&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;page one&amp;#34;}, {&amp;#34;psd&amp;#34;:&amp;#34;page02.</description></item><item><title>Step2 - Solar2D</title><link>https://kwiksher.github.io/kwik5docs/get_started/step2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/step2/</guid><description>Solar2D Simulator Open main.lua in Solar2D/src with Solar2D Simulator
TODO UXP::Publish to include swipe page or A/D keys for navigation ⭐️
kwiconfig.lua
debug = {enable = true, navigation= &amp;#34;swipe/keys&amp;#34;} Kwik Visual Code Editor</description></item><item><title>Kwik Editor Screen Orientation</title><link>https://kwiksher.github.io/kwik5docs/get_started/editor_screen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/editor_screen/</guid><description>build.setting with landscape build.setting with portrait The editable tables for spritesheet, and sync text&amp;amp;audio looks lik this</description></item><item><title>PSD Naming Rule</title><link>https://kwiksher.github.io/kwik5docs/get_started/naming_rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/naming_rule/</guid><description>Naming .psd file anad layers in documents Project and file names
Avoid long names for your projects and files and, DO NOT use characters like +-&amp;lt;&amp;gt;%,#;!.
Layer names
Before you start adding buttons and animations, follow the rules below. It is much easier to add interactivity with finalized names rather than to edit all of them afterward. Basic rules include:
Only user Western characters are allowed for layer names.
DO NOT use characters such as + - &amp;lt;&amp;gt; %,#;!</description></item><item><title>PSD Screen Size Orientation</title><link>https://kwiksher.github.io/kwik5docs/get_started/screen_size_orientation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/screen_size_orientation/</guid><description>config.lua width = 320, height = 480, scale = &amp;#34;letterBox&amp;#34; https://forums.solar2d.com/t/content-positioning/355677/11
https://forums.solar2d.com/t/image-scaling/150116/10?u=ymmtny
width 1080, height 1620
https://coronalabs.com/blog/2018/08/08/understanding-content-scaling-in-corona/
https://forums.solar2d.com/t/from-the-blog-understanding-content-scaling-in-corona/348296
config.lua is always written assuming a portrait orientation
https://forums.solar2d.com/t/image-scaling/150116/
The 1.5 is a subtile change, but but instead of waiting until you have a 2160 to use the 2x images, you use them starting at 1620px screens
https://github.com/SpyricGames/Solar2D-Plugins-Public
Screen
build.settings Default Landscape page4.psd iPad Air 1536 x 2048
=&amp;gt; landscape to portrait</description></item><item><title>Solar2D Template</title><link>https://kwiksher.github.io/kwik5docs/get_started/solar2d_template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/solar2d_template/</guid><description>Project Template you can check out App/book folder from github instead of using Kwik UXP plugin to publish a book folder.
// TODO github url
The checked out book folder has page1 folder without any *.lua nor image files. If you want to rename the page name, just use Finder or File Explorerer, and change the table value in index.lua
assets/images/page1
commands/page1
components/page1
index.lua
local scenes = {&amp;#34;page1&amp;#34;} return scenes components/page1/index.</description></item><item><title>Components</title><link>https://kwiksher.github.io/kwik5docs/get_started/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/components/</guid><description>Components For instance components/pageX/page/swip.lua enables a page transition, and components/pageX/audios folder can have multiple audio lua files for instance short/audioOne.lua, long/audioTwo.lua. short audio file is loaded in to memory with audio.loadSound(), and long audio file is streaming with audio.loadStream().
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;pageX&amp;#34;, components = { layers = { { bg={} }, }, audios = { short = {&amp;#34;audioOne&amp;#34;}, long= {&amp;#34;audioTwo&amp;#34; }, groups = { }, timers = { }, variables = { }, page = { &amp;#34;controllers.</description></item><item><title>Component &amp; Asset</title><link>https://kwiksher.github.io/kwik5docs/get_started/component_with_asset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/component_with_asset/</guid><description>Compoent with Asset audio App/book/assets/audios/long/GentleRain.mp3
App/book/components/page3/index.lua
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;page3&amp;#34;, components = { layers = { }, audios = { long = {&amp;#34;GentleRain&amp;#34;, &amp;#34;Tranquility&amp;#34; }, short ={} , }, groups = {}, timers = {}, variables = {}, page = { } }, commands = { &amp;#34;onComplete&amp;#34;, &amp;#34;play&amp;#34; }, onInit = function(scene) print(&amp;#34;onInit&amp;#34;) end }) -- return scene App/book/components/page3/audios/long/GentelRain.lua
local name = .</description></item><item><title>Custom Class</title><link>https://kwiksher.github.io/kwik5docs/get_started/custom_class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/custom_class/</guid><description>Custom class Put a lua file of your own class in commompinets/custom folder
Set your classname to a layer in App/bookX/pageX/index.lua
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;page1&amp;#34;, components = { layers = { { bg={ } }, { gotoBtn={ } }, { title={ class={&amp;#34;myClass&amp;#34;} } }, }, audios = {}, groups = {}, timers = {}, variables = {}, page = { } }, commands = { }, onInit = function(scene) print(&amp;#34;onInit&amp;#34;) end }) -- return scene myClass.</description></item><item><title>Commands &amp; Events</title><link>https://kwiksher.github.io/kwik5docs/get_started/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/events/</guid><description>Commands &amp;amp; Events For an event for a page in a book commands/myAction.lua are triggeded with a dispatchEvent fucntion
UI:dispatchEvent({ name = &amp;#34;myAction&amp;#34;, UI = UI }) this myAction is defined in commands table in components/pageX/index.lua
For a button, you see in components/pageX/index.lua, buttonOne layer has two events. they are tap and drag. These tap and drag events are handleld with commands/buttonOne/tap.lua and commands/buttonOne/drag.lua
commands are called as Action in Kwik.</description></item><item><title>Import component Layer</title><link>https://kwiksher.github.io/kwik5docs/get_started/import_component/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/get_started/import_component/</guid><description>Import Layer Component Page1 Parts Instance Name index.lua
layers = { ... rectCopied = {class = {&amp;#34;imported&amp;#34;} ... } rectCopied_imported.lua
x, y color is (1, 1, 0) yellow local props={ path = &amp;#34;bookTest.components.parts.layers.buttonGroup.redRect&amp;#34;, name = &amp;#34;rectCopied&amp;#34;, class = {&amp;#34;button&amp;#34;, &amp;#34;linear&amp;#34;}, text = &amp;#34;hello importer class&amp;#34;, } local layerProps = { x = display.contentCenterX - 150, y = display.contentCenterY - 100, color = {1, 1, 0} } props.layerProps = layerProps props.classProps = { button = {}, linear = {} } return require(&amp;#34;components.</description></item></channel></rss>