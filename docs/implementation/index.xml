<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Implementation on Kwik</title><link>https://kwiksher.github.io/kwik5docs/implementation/</link><description>Recent content in Implementation on Kwik</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="https://kwiksher.github.io/kwik5docs/implementation/index.xml" rel="self" type="application/rss+xml"/><item><title>Audio Editor</title><link>https://kwiksher.github.io/kwik5docs/implementation/audio_editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/audio_editor/</guid><description>Audio Editor Audio Editor Read Save Read editor.audio.audioTable receives the string array of audio files via nanostore
editor/parts/controller/selector/selectAudio receives the onClick event when user selects an audio entry in audioTable
local instance = require(&amp;#34;editor.audio.index&amp;#34;).controller:command() return instance the controller:command() from editor.controller.index decodes the json file of a selected audio and setValue to the UI table which has been initiated in editor.audio.index
conrolProps onCompletebox buttons are loaded in editor.audio.index and they are initiated with the controller</description></item><item><title>Adding A Component</title><link>https://kwiksher.github.io/kwik5docs/implementation/adding_component/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/adding_component/</guid><description>how to add a component editor/index.lua and baseTable.lua handles user&amp;rsquo; selection from xxxTable commands/selectors/selectXXX.lua reads a json
selectors.lua handles to read values of UI.scene.model.components for xxxTable.
editor/models.lua
this defines layer related components. it does not include audio, group, timer, variables and action.
local models = { { name = &amp;#34;Animations&amp;#34;, icon = &amp;#34;toolAnim&amp;#34;, tools = { {name = &amp;#34;Linear&amp;#34;, icon = &amp;#34;animLinear&amp;#34;}, {name = &amp;#34;Blink&amp;#34;, icon = &amp;#34;animBlink&amp;#34;}, {name = &amp;#34;Bounce&amp;#34;, icon = &amp;#34;animBounce&amp;#34;}, {name = &amp;#34;Pulse&amp;#34;, icon = &amp;#34;animPulse&amp;#34;}, {name = &amp;#34;Rotation&amp;#34;, icon = &amp;#34;animRotation&amp;#34;}, {name = &amp;#34;Shake&amp;#34;, icon = &amp;#34;animShake&amp;#34;}, {name = &amp;#34;Switch&amp;#34;, icon = &amp;#34;animSwitch&amp;#34;}, {name = &amp;#34;Filter&amp;#34;, icon = &amp;#34;animFilter&amp;#34;}, {name = &amp;#34;Path&amp;#34;, icon = &amp;#34;animPath&amp;#34;}, }, id = &amp;#34;animation&amp;#34; }, .</description></item><item><title>Behavior Tree</title><link>https://kwiksher.github.io/kwik5docs/implementation/btree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/btree/</guid><description>Behavior Tree in Editor This is experimental. A Behavior tree implemetation enables a conditional call for an action node. If conditions are not satisfied for a button, the associated action to the button will not be executed when user clicks it
editor/controller/BTree/selectors.tree
BTree calls BThandler when actionNode is activated. The parameters are stored in backboard.
editor.index
M.commands = { {name=&amp;#34;selectApp&amp;#34;, btree=nil}, {name=&amp;#34;selectBook&amp;#34;, btree=&amp;#34;load book&amp;#34;}, {name=&amp;#34;selectPage&amp;#34;, btree=&amp;#34;load page&amp;#34;}, {name=&amp;#34;selectLayer&amp;#34;, btree=&amp;#34;load layer&amp;#34;}, {name=&amp;#34;selectPageProps&amp;#34;, btree=nil}, -- {name=&amp;#34;selectAction&amp;#34;, btree=&amp;#34;&amp;#34;}, {name=&amp;#34;selectTool&amp;#34;, btree=&amp;#34;editor component&amp;#34;}, -- {name=&amp;#34;selectActionCommand&amp;#34;, btree=&amp;#34;&amp;#34;} {name=&amp;#34;selectAudio&amp;#34;, btree=&amp;#34;load audio&amp;#34;}, {name=&amp;#34;selectGroup&amp;#34;, btree=&amp;#34;load group&amp;#34;}, {name=&amp;#34;selectTimer&amp;#34;, btree=&amp;#34;load timer&amp;#34;}, {name=&amp;#34;selectVariable&amp;#34;, btree=&amp;#34;load variable&amp;#34;}, -- {name=&amp;#34;selectVideo&amp;#34;, btree=&amp;#34;load video&amp;#34;}, } -- connects with BTree ---- local BTMap = {} for i=1, #M.</description></item><item><title>Selectors</title><link>https://kwiksher.github.io/kwik5docs/implementation/selectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/selectors/</guid><description>Selectors editor.parts.selectors
user selects one of entries of layers, audios, actions, groups, timers, variables
the tables of layers, audios, actions, groups, timers, variables are made with nanostore:set when user clicks one of the menu
componentHandler is attached to the onClick event of menu and then each XXXStore:listener creates each table
local function componentHandler(UI, storeTable) ... -- should we show the last secection? if storeTable == &amp;#34;layerTable&amp;#34; then UI.editor.layerStore:set(UI.scene.model.components.layers) elseif storeTable == &amp;#34;audioTable&amp;#34; then UI.</description></item><item><title>REST Server</title><link>https://kwiksher.github.io/kwik5docs/implementation/rest_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/implementation/rest_server/</guid><description>Rest Server editor.pegasus
pegasus is a open-souce lua http-server
httpYac in vscode to send a REST request to editor.pegasus
selectPage.http
this calls these commnands in editor
selectApp selectBook selectPage ref edtior.tests
pegasus harness receives the request in REST format (json)
dispatch events to commands
selectXXX reads App/bookX/pageX/index.lua or models/pageX/.json files, and the data are stored in nanstores for components such bookStore, pageStore, layerStore, audioStore
Response of http Rest in pegasus are retreived by nanostores:get(xxxStore)</description></item></channel></rss>