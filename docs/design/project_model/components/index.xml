<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Components on Kwik</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/</link><description>Recent content in Components on Kwik</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="https://kwiksher.github.io/kwik5docs/design/project_model/components/index.xml" rel="self" type="application/rss+xml"/><item><title>Layer</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/image/</guid><description>Layer page1
page4 for demonstrating layers and groups
local sceneName = ... -- local scene = require(&amp;#39;controller.scene&amp;#39;).new(sceneName, { name = &amp;#34;page4&amp;#34;, components = { layers = { { bg={} }, { copyright={} }, { star={} }, { GroupA={ { Ellipse = {} }, { SubA = { { Triangle = {} }, } }, } }, { hello={} }, }, audios = {}, groups = {&amp;#34;SubA&amp;#34;, &amp;#34;GroupA&amp;#34;, &amp;#34;myGroup&amp;#34; }, timers = {}, variables = {}, page = {} }, commands = { -- &amp;#34;myAction&amp;#34;, &amp;#34;myEvents.</description></item><item><title>Animation</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/animation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/animation/</guid><description>Animation UI
index template
editor.template.componetns/pageX/index.lua template
editor.template.components.pageX.animations
layer_animation
module
components.kwik.layer_animation editor
components.editor.animation
tree .lua defaults
components.editor.animation.defaults</description></item><item><title>Audio</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/audio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/audio/</guid><description>Audio UI
index template
editor.template.componetns/pageX/index.lua
{ name = &amp;#34;pageX&amp;#34;, components = { layers = { {background={}}, }, audios = { long = {&amp;#34;streamOne&amp;#34;, &amp;#34;streamTwo&amp;#34;}, short = {&amp;#34;shortOne&amp;#34;, &amp;#34;shortTwo&amp;#34;} }, }, commands = {}, } template
editor.template.components.pageX.audios.aduio
local props = { autoPlay = {{autoPlay}}, channel = {{channel}}, delay = {{delay}}, filename = &amp;#34;{{filename}}&amp;#34;, folder = &amp;#34;{{folder}}&amp;#34;, loops = {{loops}}, -- 1 + 3 = 4 times name = &amp;#34;{{name}}&amp;#34;, type = &amp;#34;{{type}}&amp;#34;, } return require(&amp;#34;components.</description></item><item><title>Button</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/button/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/button/</guid><description>Button</description></item><item><title>Group</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/group/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/group/</guid><description>Group TODO page4&amp;rsquo;s groups = {&amp;ldquo;SubA&amp;rdquo;, &amp;ldquo;GroupA&amp;rdquo;, &amp;ldquo;myGroup&amp;rdquo; }</description></item><item><title>Spritesheet</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/spritesheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/spritesheet/</guid><description>Spritesheet TODO
actionName with sprite event phase like began, ended, bounce, loop, next file selector for sheetInfo and filename? UI
index template
editor.template.componetns/pageX/index.lua template
editor.template.components.pageX.replacement
layer_spritesheet
module
components.kwik.layer_spritesheet editor
components.editor.replacement
. ├── controller │ ├── add.lua │ ├── cancel.lua │ ├── delete.lua │ ├── index.lua │ ├── save.lua │ └── select.lua ├── index.lua ├── listButtons.lua ├── listPropsTable.lua ├── listbox.lua ├── model.lua ├── onCompletebox.lua ├── particles │ └── controller └── videobox.lua defaults</description></item><item><title>Sync Audio&amp;Text</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/sync_audio_text/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/sync_audio_text/</guid><description>Sync Audio &amp;amp; Text A: alphabet B: i am cat C: my name is kwik D: my father is nice TODO
the latest model defaults.sync has audioProps and textProps but UI does not have them yet
update page3/layers
alphabet_sync.lua, iamacat_sync.lua mynameiskwik_sync.lua props.text &amp;ndash;&amp;gt; props.line
props.languge &amp;ndash;&amp;gt; props.line.en, props.line.jp and textProps.language = {&amp;ldquo;en&amp;rdquo;, &amp;ldquo;jp&amp;rdquo;}
UI
default
local M = { name = &amp;#34;alphabet&amp;#34;, class = &amp;#34;sync&amp;#34;, controls = { autoPlay = true, delay = nil, fadeDuration = 1000, speakerIcon = true, wordTouch = true, }, audioProps = { filename = &amp;#34;alphabet.</description></item><item><title>Timer</title><link>https://kwiksher.github.io/kwik5docs/design/project_model/components/timer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kwiksher.github.io/kwik5docs/design/project_model/components/timer/</guid><description>Timer UI
template
editor.template.components.pageX.timers.timer
local props = { actionName = &amp;#34;{{actionName}}&amp;#34;, delay = {{delay}}, iterations = {{iterations}}, name = &amp;#34;{{name}}&amp;#34;, } return require(&amp;#34;components.kwik.page_timer&amp;#34;).new(props) module
components.kwik.page_timer
local M = {} ... ... function M:didShow(UI) self.timerObj = timer.performWithDelay( self.delay, function() if self.actionName then UI.scene:dispatchEvent({name = self.actionName }) end end, self.iterations) end -- components.editor.timer timer ├── buttons.lua ├── controller │ ├── cancel.lua │ └── save.lua ├── defaults │ └── timer.lua ├── index.lua └── timerTable.</description></item></channel></rss>